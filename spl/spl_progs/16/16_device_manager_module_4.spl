alias functionNum R1;
alias currentPID R2;

// 2.Terminal write function has a function number 3. If the functionNum is 3, implement thefollowing steps else return using return statement. 

if( functionNum == 3) then
	// Calling Acquire Terminal :-

	// 3. Push all the registers used till now in this module using the multipush statement inSPL as done earlier.
	multipush(R0, R1, R2, R3, R4, R5); 
	// backup;

	// 4. Store the function number 8 in register R1 and PID of the current process from the System Status table inregister R2 (Can use currentPID, as it already contain current PID value).
	functionNum = 8;
	currentPID = [SYSTEM_STATUS_TABLE+1];

	// 5. Call module 0.
	call MOD_0;
	
	// 6. Ignore the value present in R0 as Acquire Terminal does not have any return value. 

	// 7. Use the multipop statement to restore the registers as done earlier.  
	multipop(R0, R1, R2, R3, R4, R5); 

	// 8. Print the word in register R3, using the print statement. 
	print R3;

	// 	Calling Release Terminal :-
	
	// 9. Push all the registers used till now using the multipush statement as done earlier. 
	multipush(R0, R1, R2, R3, R4, R5); 
		
	// 10. Store the function number 9 in register R1 and PID of the current process from theSystem Status table in register R2 
	// (Can use currentPID, as it already contain current PIDvalue). 
	functionNum = 9;
	currentPID = [SYSTEM_STATUS_TABLE+1];

	// 11. Call module 0. 
	call MOD_0;

	// 12. Return value will be stored in R0 by module 0.  Save this return value in any otherregister if needed.
	//  VERIFY 

	// 13. Restore the registers using the multipop statement. 
	multipop(R0, R1, R2, R3, R4, R5); 

	// 14. Return using the return statement.
	return;

endif;
